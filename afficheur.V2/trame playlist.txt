premier boucle :

#include <QTimer>
if (button2 == true)
{
	aff.ModifierImage("nom.image);
	QT += 100;
	aff.ModifierImage("nom.image);
	QT += 100;
	aff.modifierImage("nom.image");
	QT += 100;
}

deuxieme boucle :

if (button1==true)
{
	aff.ModifierImage("bleu.png");
	aff.EnvoyerImageEtTexte();
	sleep_for(3000ms);
}

	/*AfficheurGeant aff;
	aff.ModifierImage("bleu.png");
	aff.ModifierTexte("",10,50,0,255,0);  //modier le texte pour afficher du texte*/
	aff.EnvoyerImageEtTexte();*/


THREAD
#include <thread>
#include <mutex>
#include <iostream>
void display(int start, int nb)
{
	for (int i = start; i < start + nb; ++i)
		std::cout << i << ",";
}
int main(){
	std::thread t1(display, 0, 5);
	std::thread t2([]() { display(5, 5); });
	t1.join();
	t2.join();
	return 0 ;
}

	 std::thread t1.join([]() {
	 AfficheurGeant aff;

		aff.ModifierImage("bleu.png");
		aff.EnvoyerImageEtTexte();
		Sleep(300);

		aff.ModifierImage("bleu.png");
		aff.EnvoyerImageEtTexte();
		Sleep(300);

		aff.ModifierImage("bleu.png");
		aff.EnvoyerImageEtTexte();
		Sleep(300);


	 });

AfficheurGeant aff;



SELECTEUR DE FICHIER 

var picker = new Windows.Storage.Pickers.FileOpenPicker();
picker.ViewMode = Windows.Storage.Pickers.PickerViewMode.Thumbnail;
picker.SuggestedStartLocation = Windows.Storage.Pickers.PickerLocationId.PicturesLibrary;
picker.FileTypeFilter.Add(".jpg");
picker.FileTypeFilter.Add(".jpeg");
picker.FileTypeFilter.Add(".png");

Windows.Storage.StorageFile file = await picker.PickSingleFileAsync();
if (file != null)
{
    // Application now has read/write access to the picked file
    this.textBlock.Text = "Picked photo: " + file.Name;
}
else
{
    this.textBlock.Text = "Operation cancelled.";
}

SELECTIONNER UN DOSSIER COMPLET

var folderPicker = new Windows.Storage.Pickers.FolderPicker();
folderPicker.SuggestedStartLocation = Windows.Storage.Pickers.PickerLocationId.Desktop;
folderPicker.FileTypeFilter.Add("*");

Windows.Storage.StorageFolder folder = await folderPicker.PickSingleFolderAsync();
if (folder != null)
{
    // Application now has read/write access to all contents in the picked folder
    // (including other sub-folder contents)
    Windows.Storage.AccessCache.StorageApplicationPermissions.
    FutureAccessList.AddOrReplace("PickedFolderToken", folder);
    this.textBlock.Text = "Picked folder: " + folder.Name;
}
else
{
    this.textBlock.Text = "Operation cancelled.";
}	
*

selecteur de dossier directment sur un bouton 
Timage1->Picture->loadFromFolder;
Timage1->Picture->LoadFormfile("bleu.png")//exemple de fichier a mettre